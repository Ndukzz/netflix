// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
(function(global, factory) { /* global define, require, module */

    /* AMD */ if (typeof define === 'function' && define.amd)
        define(["protobufjs/minimal"], factory);

    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)
        module.exports = factory(require("google-gax/build/src/protobuf").protobufMinimal);

})(this, function($protobuf) {
    "use strict";

    // Common aliases
    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;
    
    // Exported root namespace
    var $root = $protobuf.roots._google_cloud_pubsub_protos || ($protobuf.roots._google_cloud_pubsub_protos = {});
    
    $root.google = (function() {
    
        /**
         * Namespace google.
         * @exports google
         * @namespace
         */
        var google = {};
    
        google.pubsub = (function() {
    
            /**
             * Namespace pubsub.
             * @memberof google
             * @namespace
             */
            var pubsub = {};
    
            pubsub.v1 = (function() {
    
                /**
                 * Namespace v1.
                 * @memberof google.pubsub
                 * @namespace
                 */
                var v1 = {};
    
                v1.Publisher = (function() {
    
                    /**
                     * Constructs a new Publisher service.
                     * @memberof google.pubsub.v1
                     * @classdesc Represents a Publisher
                     * @extends $protobuf.rpc.Service
                     * @constructor
                     * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                     * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                     * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                     */
                    function Publisher(rpcImpl, requestDelimited, responseDelimited) {
                        $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                    }
    
                    (Publisher.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Publisher;
    
                    /**
                     * Creates new Publisher service using the specified rpc implementation.
                     * @function create
                     * @memberof google.pubsub.v1.Publisher
                     * @static
                     * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                     * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                     * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                     * @returns {Publisher} RPC service. Useful where requests and/or responses are streamed.
                     */
                    Publisher.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                        return new this(rpcImpl, requestDelimited, responseDelimited);
                    };
    
                    /**
                     * Callback as used by {@link google.pubsub.v1.Publisher|createTopic}.
                     * @memberof google.pubsub.v1.Publisher
                     * @typedef CreateTopicCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.pubsub.v1.Topic} [response] Topic
                     */
    
                    /**
                     * Calls CreateTopic.
                     * @function createTopic
                     * @memberof google.pubsub.v1.Publisher
                     * @instance
                     * @param {google.pubsub.v1.ITopic} request Topic message or plain object
                     * @param {google.pubsub.v1.Publisher.CreateTopicCallback} callback Node-style callback called with the error, if any, and Topic
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(Publisher.prototype.createTopic = function createTopic(request, callback) {
                        return this.rpcCall(createTopic, $root.google.pubsub.v1.Topic, $root.google.pubsub.v1.Topic, request, callback);
                    }, "name", { value: "CreateTopic" });
    
                    /**
                     * Calls CreateTopic.
                     * @function createTopic
                     * @memberof google.pubsub.v1.Publisher
                     * @instance
                     * @param {google.pubsub.v1.ITopic} request Topic message or plain object
                     * @returns {Promise<google.pubsub.v1.Topic>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.pubsub.v1.Publisher|updateTopic}.
                     * @memberof google.pubsub.v1.Publisher
                     * @typedef UpdateTopicCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.pubsub.v1.Topic} [response] Topic
                     */
    
                    /**
                     * Calls UpdateTopic.
                     * @function updateTopic
                     * @memberof google.pubsub.v1.Publisher
                     * @instance
                     * @param {google.pubsub.v1.IUpdateTopicRequest} request UpdateTopicRequest message or plain object
                     * @param {google.pubsub.v1.Publisher.UpdateTopicCallback} callback Node-style callback called with the error, if any, and Topic
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(Publisher.prototype.updateTopic = function updateTopic(request, callback) {
                        return this.rpcCall(updateTopic, $root.google.pubsub.v1.UpdateTopicRequest, $root.google.pubsub.v1.Topic, request, callback);
                    }, "name", { value: "UpdateTopic" });
    
                    /**
                     * Calls UpdateTopic.
                     * @function updateTopic
                     * @memberof google.pubsub.v1.Publisher
                     * @instance
                     * @param {google.pubsub.v1.IUpdateTopicRequest} request UpdateTopicRequest message or plain object
                     * @returns {Promise<google.pubsub.v1.Topic>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.pubsub.v1.Publisher|publish}.
                     * @memberof google.pubsub.v1.Publisher
                     * @typedef PublishCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.pubsub.v1.PublishResponse} [response] PublishResponse
                     */
    
                    /**
                     * Calls Publish.
                     * @function publish
                     * @memberof google.pubsub.v1.Publisher
                     * @instance
                     * @param {google.pubsub.v1.IPublishRequest} request PublishRequest message or plain object
                     * @param {google.pubsub.v1.Publisher.PublishCallback} callback Node-style callback called with the error, if any, and PublishResponse
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(Publisher.prototype.publish = function publish(request, callback) {
                        return this.rpcCall(publish, $root.google.pubsub.v1.PublishRequest, $root.google.pubsub.v1.PublishResponse, request, callback);
                    }, "name", { value: "Publish" });
    
                    /**
                     * Calls Publish.
                     * @function publish
                     * @memberof google.pubsub.v1.Publisher
                     * @instance
                     * @param {google.pubsub.v1.IPublishRequest} request PublishRequest message or plain object
                     * @returns {Promise<google.pubsub.v1.PublishResponse>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.pubsub.v1.Publisher|getTopic}.
                     * @memberof google.pubsub.v1.Publisher
                     * @typedef GetTopicCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.pubsub.v1.Topic} [response] Topic
                     */
    
                    /**
                     * Calls GetTopic.
                     * @function getTopic
                     * @memberof google.pubsub.v1.Publisher
                     * @instance
                     * @param {google.pubsub.v1.IGetTopicRequest} request GetTopicRequest message or plain object
                     * @param {google.pubsub.v1.Publisher.GetTopicCallback} callback Node-style callback called with the error, if any, and Topic
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(Publisher.prototype.getTopic = function getTopic(request, callback) {
                        return this.rpcCall(getTopic, $root.google.pubsub.v1.GetTopicRequest, $root.google.pubsub.v1.Topic, request, callback);
                    }, "name", { value: "GetTopic" });
    
                    /**
                     * Calls GetTopic.
                     * @function getTopic
                     * @memberof google.pubsub.v1.Publisher
                     * @instance
                     * @param {google.pubsub.v1.IGetTopicRequest} request GetTopicRequest message or plain object
                     * @returns {Promise<google.pubsub.v1.Topic>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.pubsub.v1.Publisher|listTopics}.
                     * @memberof google.pubsub.v1.Publisher
                     * @typedef ListTopicsCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.pubsub.v1.ListTopicsResponse} [response] ListTopicsResponse
                     */
    
                    /**
                     * Calls ListTopics.
                     * @function listTopics
                     * @memberof google.pubsub.v1.Publisher
                     * @instance
                     * @param {google.pubsub.v1.IListTopicsRequest} request ListTopicsRequest message or plain object
                     * @param {google.pubsub.v1.Publisher.ListTopicsCallback} callback Node-style callback called with the error, if any, and ListTopicsResponse
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(Publisher.prototype.listTopics = function listTopics(request, callback) {
                        return this.rpcCall(listTopics, $root.google.pubsub.v1.ListTopicsRequest, $root.google.pubsub.v1.ListTopicsResponse, request, callback);
                    }, "name", { value: "ListTopics" });
    
                    /**
                     * Calls ListTopics.
                     * @function listTopics
                     * @memberof google.pubsub.v1.Publisher
                     * @instance
                     * @param {google.pubsub.v1.IListTopicsRequest} request ListTopicsRequest message or plain object
                     * @returns {Promise<google.pubsub.v1.ListTopicsResponse>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.pubsub.v1.Publisher|listTopicSubscriptions}.
                     * @memberof google.pubsub.v1.Publisher
                     * @typedef ListTopicSubscriptionsCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.pubsub.v1.ListTopicSubscriptionsResponse} [response] ListTopicSubscriptionsResponse
                     */
    
                    /**
                     * Calls ListTopicSubscriptions.
                     * @function listTopicSubscriptions
                     * @memberof google.pubsub.v1.Publisher
                     * @instance
                     * @param {google.pubsub.v1.IListTopicSubscriptionsRequest} request ListTopicSubscriptionsRequest message or plain object
                     * @param {google.pubsub.v1.Publisher.ListTopicSubscriptionsCallback} callback Node-style callback called with the error, if any, and ListTopicSubscriptionsResponse
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(Publisher.prototype.listTopicSubscriptions = function listTopicSubscriptions(request, callback) {
                        return this.rpcCall(listTopicSubscriptions, $root.google.pubsub.v1.ListTopicSubscriptionsRequest, $root.google.pubsub.v1.ListTopicSubscriptionsResponse, request, callback);
                    }, "name", { value: "ListTopicSubscriptions" });
    
                    /**
                     * Calls ListTopicSubscriptions.
                     * @function listTopicSubscriptions
                     * @memberof google.pubsub.v1.Publisher
                     * @instance
                     * @param {google.pubsub.v1.IListTopicSubscriptionsRequest} request ListTopicSubscriptionsRequest message or plain object
                     * @returns {Promise<google.pubsub.v1.ListTopicSubscriptionsResponse>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.pubsub.v1.Publisher|listTopicSnapshots}.
                     * @memberof google.pubsub.v1.Publisher
                     * @typedef ListTopicSnapshotsCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.pubsub.v1.ListTopicSnapshotsResponse} [response] ListTopicSnapshotsResponse
                     */
    
                    /**
                     * Calls ListTopicSnapshots.
                     * @function listTopicSnapshots
                     * @memberof google.pubsub.v1.Publisher
                     * @instance
                     * @param {google.pubsub.v1.IListTopicSnapshotsRequest} request ListTopicSnapshotsRequest message or plain object
                     * @param {google.pubsub.v1.Publisher.ListTopicSnapshotsCallback} callback Node-style callback called with the error, if any, and ListTopicSnapshotsResponse
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(Publisher.prototype.listTopicSnapshots = function listTopicSnapshots(request, callback) {
                        return this.rpcCall(listTopicSnapshots, $root.google.pubsub.v1.ListTopicSnapshotsRequest, $root.google.pubsub.v1.ListTopicSnapshotsResponse, request, callback);
                    }, "name", { value: "ListTopicSnapshots" });
    
                    /**
                     * Calls ListTopicSnapshots.
                     * @function listTopicSnapshots
                     * @memberof google.pubsub.v1.Publisher
                     * @instance
                     * @param {google.pubsub.v1.IListTopicSnapshotsRequest} request ListTopicSnapshotsRequest message or plain object
                     * @returns {Promise<google.pubsub.v1.ListTopicSnapshotsResponse>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.pubsub.v1.Publisher|deleteTopic}.
                     * @memberof google.pubsub.v1.Publisher
                     * @typedef DeleteTopicCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.protobuf.Empty} [response] Empty
                     */
    
                    /**
                     * Calls DeleteTopic.
                     * @function deleteTopic
                     * @memberof google.pubsub.v1.Publisher
                     * @instance
                     * @param {google.pubsub.v1.IDeleteTopicRequest} request DeleteTopicRequest message or plain object
                     * @param {google.pubsub.v1.Publisher.DeleteTopicCallback} callback Node-style callback called with the error, if any, and Empty
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(Publisher.prototype.deleteTopic = function deleteTopic(request, callback) {
                        return this.rpcCall(deleteTopic, $root.google.pubsub.v1.DeleteTopicRequest, $root.google.protobuf.Empty, request, callback);
                    }, "name", { value: "DeleteTopic" });
    
                    /**
                     * Calls DeleteTopic.
                     * @function deleteTopic
                     * @memberof google.pubsub.v1.Publisher
                     * @instance
                     * @param {google.pubsub.v1.IDeleteTopicRequest} request DeleteTopicRequest message or plain object
                     * @returns {Promise<google.protobuf.Empty>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.pubsub.v1.Publisher|detachSubscription}.
                     * @memberof google.pubsub.v1.Publisher
                     * @typedef DetachSubscriptionCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.pubsub.v1.DetachSubscriptionResponse} [response] DetachSubscriptionResponse
                     */
    
                    /**
                     * Calls DetachSubscription.
                     * @function detachSubscription
                     * @memberof google.pubsub.v1.Publisher
                     * @instance
                     * @param {google.pubsub.v1.IDetachSubscriptionRequest} request DetachSubscriptionRequest message or plain object
                     * @param {google.pubsub.v1.Publisher.DetachSubscriptionCallback} callback Node-style callback called with the error, if any, and DetachSubscriptionResponse
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(Publisher.prototype.detachSubscription = function detachSubscription(request, callback) {
                        return this.rpcCall(detachSubscription, $root.google.pubsub.v1.DetachSubscriptionRequest, $root.google.pubsub.v1.DetachSubscriptionResponse, request, callback);
                    }, "name", { value: "DetachSubscription" });
    
                    /**
                     * Calls DetachSubscription.
                     * @function detachSubscription
                     * @memberof google.pubsub.v1.Publisher
                     * @instance
                     * @param {google.pubsub.v1.IDetachSubscriptionRequest} request DetachSubscriptionRequest message or plain object
                     * @returns {Promise<google.pubsub.v1.DetachSubscriptionResponse>} Promise
                     * @variation 2
                     */
    
                    return Publisher;
                })();
    
                v1.MessageStoragePolicy = (function() {
    
                    /**
                     * Properties of a MessageStoragePolicy.
                     * @memberof google.pubsub.v1
                     * @interface IMessageStoragePolicy
                     * @property {Array.<string>|null} [allowedPersistenceRegions] MessageStoragePolicy allowedPersistenceRegions
                     */
    
                    /**
                     * Constructs a new MessageStoragePolicy.
                     * @memberof google.pubsub.v1
                     * @classdesc Represents a MessageStoragePolicy.
                     * @implements IMessageStoragePolicy
                     * @constructor
                     * @param {google.pubsub.v1.IMessageStoragePolicy=} [properties] Properties to set
                     */
                    function MessageStoragePolicy(properties) {
                        this.allowedPersistenceRegions = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * MessageStoragePolicy allowedPersistenceRegions.
                     * @member {Array.<string>} allowedPersistenceRegions
                     * @memberof google.pubsub.v1.MessageStoragePolicy
                     * @instance
                     */
                    MessageStoragePolicy.prototype.allowedPersistenceRegions = $util.emptyArray;
    
                    /**
                     * Creates a new MessageStoragePolicy instance using the specified properties.
                     * @function create
                     * @memberof google.pubsub.v1.MessageStoragePolicy
                     * @static
                     * @param {google.pubsub.v1.IMessageStoragePolicy=} [properties] Properties to set
                     * @returns {google.pubsub.v1.MessageStoragePolicy} MessageStoragePolicy instance
                     */
                    MessageStoragePolicy.create = function create(properties) {
                        return new MessageStoragePolicy(properties);
                    };
    
                    /**
                     * Encodes the specified MessageStoragePolicy message. Does not implicitly {@link google.pubsub.v1.MessageStoragePolicy.verify|verify} messages.
                     * @function encode
                     * @memberof google.pubsub.v1.MessageStoragePolicy
                     * @static
                     * @param {google.pubsub.v1.IMessageStoragePolicy} message MessageStoragePolicy message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MessageStoragePolicy.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.allowedPersistenceRegions != null && message.allowedPersistenceRegions.length)
                            for (var i = 0; i < message.allowedPersistenceRegions.length; ++i)
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.allowedPersistenceRegions[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified MessageStoragePolicy message, length delimited. Does not implicitly {@link google.pubsub.v1.MessageStoragePolicy.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.pubsub.v1.MessageStoragePolicy
                     * @static
                     * @param {google.pubsub.v1.IMessageStoragePolicy} message MessageStoragePolicy message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    MessageStoragePolicy.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a MessageStoragePolicy message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.pubsub.v1.MessageStoragePolicy
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.pubsub.v1.MessageStoragePolicy} MessageStoragePolicy
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MessageStoragePolicy.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.pubsub.v1.MessageStoragePolicy();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.allowedPersistenceRegions && message.allowedPersistenceRegions.length))
                                        message.allowedPersistenceRegions = [];
                                    message.allowedPersistenceRegions.push(reader.string());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a MessageStoragePolicy message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.pubsub.v1.MessageStoragePolicy
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.pubsub.v1.MessageStoragePolicy} MessageStoragePolicy
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    MessageStoragePolicy.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a MessageStoragePolicy message.
                     * @function verify
                     * @memberof google.pubsub.v1.MessageStoragePolicy
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    MessageStoragePolicy.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.allowedPersistenceRegions != null && message.hasOwnProperty("allowedPersistenceRegions")) {
                            if (!Array.isArray(message.allowedPersistenceRegions))
                                return "allowedPersistenceRegions: array expected";
                            for (var i = 0; i < message.allowedPersistenceRegions.length; ++i)
                                if (!$util.isString(message.allowedPersistenceRegions[i]))
                                    return "allowedPersistenceRegions: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a MessageStoragePolicy message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.pubsub.v1.MessageStoragePolicy
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.pubsub.v1.MessageStoragePolicy} MessageStoragePolicy
                     */
                    MessageStoragePolicy.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.pubsub.v1.MessageStoragePolicy)
                            return object;
                        var message = new $root.google.pubsub.v1.MessageStoragePolicy();
                        if (object.allowedPersistenceRegions) {
                            if (!Array.isArray(object.allowedPersistenceRegions))
                                throw TypeError(".google.pubsub.v1.MessageStoragePolicy.allowedPersistenceRegions: array expected");
                            message.allowedPersistenceRegions = [];
                            for (var i = 0; i < object.allowedPersistenceRegions.length; ++i)
                                message.allowedPersistenceRegions[i] = String(object.allowedPersistenceRegions[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a MessageStoragePolicy message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.pubsub.v1.MessageStoragePolicy
                     * @static
                     * @param {google.pubsub.v1.MessageStoragePolicy} message MessageStoragePolicy
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    MessageStoragePolicy.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.allowedPersistenceRegions = [];
                        if (message.allowedPersistenceRegions && message.allowedPersistenceRegions.length) {
                            object.allowedPersistenceRegions = [];
                            for (var j = 0; j < message.allowedPersistenceRegions.length; ++j)
                                object.allowedPersistenceRegions[j] = message.allowedPersistenceRegions[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this MessageStoragePolicy to JSON.
                     * @function toJSON
                     * @memberof google.pubsub.v1.MessageStoragePolicy
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    MessageStoragePolicy.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for MessageStoragePolicy
                     * @function getTypeUrl
                     * @memberof google.pubsub.v1.MessageStoragePolicy
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    MessageStoragePolicy.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.pubsub.v1.MessageStoragePolicy";
                    };
    
                    return MessageStoragePolicy;
                })();
    
                v1.SchemaSettings = (function() {
    
                    /**
                     * Properties of a SchemaSettings.
                     * @memberof google.pubsub.v1
                     * @interface ISchemaSettings
                     * @property {string|null} [schema] SchemaSettings schema
                     * @property {google.pubsub.v1.Encoding|null} [encoding] SchemaSettings encoding
                     * @property {string|null} [firstRevisionId] SchemaSettings firstRevisionId
                     * @property {string|null} [lastRevisionId] SchemaSettings lastRevisionId
                     */
    
                    /**
                     * Constructs a new SchemaSettings.
                     * @memberof google.pubsub.v1
                     * @classdesc Represents a SchemaSettings.
                     * @implements ISchemaSettings
                     * @constructor
                     * @param {google.pubsub.v1.ISchemaSettings=} [properties] Properties to set
                     */
                    function SchemaSettings(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * SchemaSettings schema.
                     * @member {string} schema
                     * @memberof google.pubsub.v1.SchemaSettings
                     * @instance
                     */
                    SchemaSettings.prototype.schema = "";
    
                    /**
                     * SchemaSettings encoding.
                     * @member {google.pubsub.v1.Encoding} encoding
                     * @memberof google.pubsub.v1.SchemaSettings
                     * @instance
                     */
                    SchemaSettings.prototype.encoding = 0;
    
                    /**
                     * SchemaSettings firstRevisionId.
                     * @member {string} firstRevisionId
                     * @memberof google.pubsub.v1.SchemaSettings
                     * @instance
                     */
                    SchemaSettings.prototype.firstRevisionId = "";
    
                    /**
                     * SchemaSettings lastRevisionId.
                     * @member {string} lastRevisionId
                     * @memberof google.pubsub.v1.SchemaSettings
                     * @instance
                     */
                    SchemaSettings.prototype.lastRevisionId = "";
    
                    /**
                     * Creates a new SchemaSettings instance using the specified properties.
                     * @function create
                     * @memberof google.pubsub.v1.SchemaSettings
                     * @static
                     * @param {google.pubsub.v1.ISchemaSettings=} [properties] Properties to set
                     * @returns {google.pubsub.v1.SchemaSettings} SchemaSettings instance
                     */
                    SchemaSettings.create = function create(properties) {
                        return new SchemaSettings(properties);
                    };
    
                    /**
                     * Encodes the specified SchemaSettings message. Does not implicitly {@link google.pubsub.v1.SchemaSettings.verify|verify} messages.
                     * @function encode
                     * @memberof google.pubsub.v1.SchemaSettings
                     * @static
                     * @param {google.pubsub.v1.ISchemaSettings} message SchemaSettings message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SchemaSettings.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.schema != null && Object.hasOwnProperty.call(message, "schema"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.schema);
                        if (message.encoding != null && Object.hasOwnProperty.call(message, "encoding"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.encoding);
                        if (message.firstRevisionId != null && Object.hasOwnProperty.call(message, "firstRevisionId"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.firstRevisionId);
                        if (message.lastRevisionId != null && Object.hasOwnProperty.call(message, "lastRevisionId"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.lastRevisionId);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified SchemaSettings message, length delimited. Does not implicitly {@link google.pubsub.v1.SchemaSettings.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.pubsub.v1.SchemaSettings
                     * @static
                     * @param {google.pubsub.v1.ISchemaSettings} message SchemaSettings message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SchemaSettings.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a SchemaSettings message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.pubsub.v1.SchemaSettings
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.pubsub.v1.SchemaSettings} SchemaSettings
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SchemaSettings.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.pubsub.v1.SchemaSettings();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.schema = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.encoding = reader.int32();
                                    break;
                                }
                            case 3: {
                                    message.firstRevisionId = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.lastRevisionId = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a SchemaSettings message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.pubsub.v1.SchemaSettings
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.pubsub.v1.SchemaSettings} SchemaSettings
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SchemaSettings.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a SchemaSettings message.
                     * @function verify
                     * @memberof google.pubsub.v1.SchemaSettings
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    SchemaSettings.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.schema != null && message.hasOwnProperty("schema"))
                            if (!$util.isString(message.schema))
                                return "schema: string expected";
                        if (message.encoding != null && message.hasOwnProperty("encoding"))
                            switch (message.encoding) {
                            default:
                                return "encoding: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        if (message.firstRevisionId != null && message.hasOwnProperty("firstRevisionId"))
                            if (!$util.isString(message.firstRevisionId))
                                return "firstRevisionId: string expected";
                        if (message.lastRevisionId != null && message.hasOwnProperty("lastRevisionId"))
                            if (!$util.isString(message.lastRevisionId))
                                return "lastRevisionId: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a SchemaSettings message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.pubsub.v1.SchemaSettings
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.pubsub.v1.SchemaSettings} SchemaSettings
                     */
                    SchemaSettings.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.pubsub.v1.SchemaSettings)
                            return object;
                        var message = new $root.google.pubsub.v1.SchemaSettings();
                        if (object.schema != null)
                            message.schema = String(object.schema);
                        switch (object.encoding) {
                        default:
                            if (typeof object.encoding === "number") {
                                message.encoding = object.encoding;
                                break;
                            }
                            break;
                        case "ENCODING_UNSPECIFIED":
                        case 0:
                            message.encoding = 0;
                            break;
                        case "JSON":
                        case 1:
                            message.encoding = 1;
                            break;
                        case "BINARY":
                        case 2:
                            message.encoding = 2;
                            break;
                        }
                        if (object.firstRevisionId != null)
                            message.firstRevisionId = String(object.firstRevisionId);
                        if (object.lastRevisionId != null)
                            message.lastRevisionId = String(object.lastRevisionId);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a SchemaSettings message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.pubsub.v1.SchemaSettings
                     * @static
                     * @param {google.pubsub.v1.SchemaSettings} message SchemaSettings
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    SchemaSettings.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.schema = "";
                            object.encoding = options.enums === String ? "ENCODING_UNSPECIFIED" : 0;
                            object.firstRevisionId = "";
                            object.lastRevisionId = "";
                        }
                        if (message.schema != null && message.hasOwnProperty("schema"))
                            object.schema = message.schema;
                        if (message.encoding != null && message.hasOwnProperty("encoding"))
                            object.encoding = options.enums === String ? $root.google.pubsub.v1.Encoding[message.encoding] === undefined ? message.encoding : $root.google.pubsub.v1.Encoding[message.encoding] : message.encoding;
                        if (message.firstRevisionId != null && message.hasOwnProperty("firstRevisionId"))
                            object.firstRevisionId = message.firstRevisionId;
                        if (message.lastRevisionId != null && message.hasOwnProperty("lastRevisionId"))
                            object.lastRevisionId = message.lastRevisionId;
                        return object;
                    };
    
                    /**
                     * Converts this SchemaSettings to JSON.
                     * @function toJSON
                     * @memberof google.pubsub.v1.SchemaSettings
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    SchemaSettings.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for SchemaSettings
                     * @function getTypeUrl
                     * @memberof google.pubsub.v1.SchemaSettings
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    SchemaSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.pubsub.v1.SchemaSettings";
                    };
    
                    return SchemaSettings;
                })();
    
                v1.Topic = (function() {
    
                    /**
                     * Properties of a Topic.
                     * @memberof google.pubsub.v1
                     * @interface ITopic
                     * @property {string|null} [name] Topic name
                     * @property {Object.<string,string>|null} [labels] Topic labels
                     * @property {google.pubsub.v1.IMessageStoragePolicy|null} [messageStoragePolicy] Topic messageStoragePolicy
                     * @property {string|null} [kmsKeyName] Topic kmsKeyName
                     * @property {google.pubsub.v1.ISchemaSettings|null} [schemaSettings] Topic schemaSettings
                     * @property {boolean|null} [satisfiesPzs] Topic satisfiesPzs
                     * @property {google.protobuf.IDuration|null} [messageRetentionDuration] Topic messageRetentionDuration
                     */
    
                    /**
                     * Constructs a new Topic.
                     * @memberof google.pubsub.v1
                     * @classdesc Represents a Topic.
                     * @implements ITopic
                     * @constructor
                     * @param {google.pubsub.v1.ITopic=} [properties] Properties to set
                     */
                    function Topic(properties) {
                        this.labels = {};
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Topic name.
                     * @member {string} name
                     * @memberof google.pubsub.v1.Topic
                     * @instance
                     */
                    Topic.prototype.name = "";
    
                    /**
                     * Topic labels.
                     * @member {Object.<string,string>} labels
                     * @memberof google.pubsub.v1.Topic
                     * @instance
                     */
                    Topic.prototype.labels = $util.emptyObject;
    
                    /**
                     * Topic messageStoragePolicy.
                     * @member {google.pubsub.v1.IMessageStoragePolicy|null|undefined} messageStoragePolicy
                     * @memberof google.pubsub.v1.Topic
                     * @instance
                     */
                    Topic.prototype.messageStoragePolicy = null;
    
                    /**
                     * Topic kmsKeyName.
                     * @member {string} kmsKeyName
                     * @memberof google.pubsub.v1.Topic
                     * @instance
                     */
                    Topic.prototype.kmsKeyName = "";
    
                    /**
                     * Topic schemaSettings.
                     * @member {google.pubsub.v1.ISchemaSettings|null|undefined} schemaSettings
                     * @memberof google.pubsub.v1.Topic
                     * @instance
                     */
                    Topic.prototype.schemaSettings = null;
    
                    /**
                     * Topic satisfiesPzs.
                     * @member {boolean} satisfiesPzs
                     * @memberof google.pubsub.v1.Topic
                     * @instance
                     */
                    Topic.prototype.satisfiesPzs = false;
    
                    /**
                     * Topic messageRetentionDuration.
                     * @member {google.protobuf.IDuration|null|undefined} messageRetentionDuration
                     * @memberof google.pubsub.v1.Topic
                     * @instance
                     */
                    Topic.prototype.messageRetentionDuration = null;
    
                    /**
                     * Creates a new Topic instance using the specified properties.
                     * @function create
                     * @memberof google.pubsub.v1.Topic
                     * @static
                     * @param {google.pubsub.v1.ITopic=} [properties] Properties to set
                     * @returns {google.pubsub.v1.Topic} Topic instance
                     */
                    Topic.create = function create(properties) {
                        return new Topic(properties);
                    };
    
                    /**
                     * Encodes the specified Topic message. Does not implicitly {@link google.pubsub.v1.Topic.verify|verify} messages.
                     * @function encode
                     * @memberof google.pubsub.v1.Topic
                     * @static
                     * @param {google.pubsub.v1.ITopic} message Topic message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Topic.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                        if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                            for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                        if (message.messageStoragePolicy != null && Object.hasOwnProperty.call(message, "messageStoragePolicy"))
                            $root.google.pubsub.v1.MessageStoragePolicy.encode(message.messageStoragePolicy, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        if (message.kmsKeyName != null && Object.hasOwnProperty.call(message, "kmsKeyName"))
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.kmsKeyName);
                        if (message.schemaSettings != null && Object.hasOwnProperty.call(message, "schemaSettings"))
                            $root.google.pubsub.v1.SchemaSettings.encode(message.schemaSettings, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                        if (message.satisfiesPzs != null && Object.hasOwnProperty.call(message, "satisfiesPzs"))
                            writer.uint32(/* id 7, wireType 0 =*/56).bool(message.satisfiesPzs);
                        if (message.messageRetentionDuration != null && Object.hasOwnProperty.call(message, "messageRetentionDuration"))
                            $root.google.protobuf.Duration.encode(message.messageRetentionDuration, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Topic message, length delimited. Does not implicitly {@link google.pubsub.v1.Topic.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.pubsub.v1.Topic
                     * @static
                     * @param {google.pubsub.v1.ITopic} message Topic message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Topic.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Topic message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.pubsub.v1.Topic
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.pubsub.v1.Topic} Topic
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Topic.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.pubsub.v1.Topic(), key, value;
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.name = reader.string();
                                    break;
                                }
                            case 2: {
                                    if (message.labels === $util.emptyObject)
                                        message.labels = {};
                                    var end2 = reader.uint32() + reader.pos;
                                    key = "";
                                    value = "";
                                    while (reader.pos < end2) {
                                        var tag2 = reader.uint32();
                                        switch (tag2 >>> 3) {
                                        case 1:
                                            key = reader.string();
                                            break;
                                        case 2:
                                            value = reader.string();
                                            break;
                                        default:
                                            reader.skipType(tag2 & 7);
                                            break;
                                        }
                                    }
                                    message.labels[key] = value;
                                    break;
                                }
                            case 3: {
                                    message.messageStoragePolicy = $root.google.pubsub.v1.MessageStoragePolicy.decode(reader, reader.uint32());
                                    break;
                                }
                            case 5: {
                                    message.kmsKeyName = reader.string();
                                    break;
                                }
                            case 6: {
                                    message.schemaSettings = $root.google.pubsub.v1.SchemaSettings.decode(reader, reader.uint32());
                                    break;
                                }
                            case 7: {
                                    message.satisfiesPzs = reader.bool();
                                    break;
                                }
                            case 8: {
                                    message.messageRetentionDuration = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Topic message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.pubsub.v1.Topic
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.pubsub.v1.Topic} Topic
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Topic.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Topic message.
                     * @function verify
                     * @memberof google.pubsub.v1.Topic
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Topic.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.name != null && message.hasOwnProperty("name"))
                            if (!$util.isString(message.name))
                                return "name: string expected";
                        if (message.labels != null && message.hasOwnProperty("labels")) {
                            if (!$util.isObject(message.labels))
                                return "labels: object expected";
                            var key = Object.keys(message.labels);
                            for (var i = 0; i < key.length; ++i)
                                if (!$util.isString(message.labels[key[i]]))
                                    return "labels: string{k:string} expected";
                        }
                        if (message.messageStoragePolicy != null && message.hasOwnProperty("messageStoragePolicy")) {
                            var error = $root.google.pubsub.v1.MessageStoragePolicy.verify(message.messageStoragePolicy);
                            if (error)
                                return "messageStoragePolicy." + error;
                        }
                        if (message.kmsKeyName != null && message.hasOwnProperty("kmsKeyName"))
                            if (!$util.isString(message.kmsKeyName))
                                return "kmsKeyName: string expected";
                        if (message.schemaSettings != null && message.hasOwnProperty("schemaSettings")) {
                            var error = $root.google.pubsub.v1.SchemaSettings.verify(message.schemaSettings);
                            if (error)
                                return "schemaSettings." + error;
                        }
                        if (message.satisfiesPzs != null && message.hasOwnProperty("satisfiesPzs"))
                            if (typeof message.satisfiesPzs !== "boolean")
                                return "satisfiesPzs: boolean expected";
                        if (message.messageRetentionDuration != null && message.hasOwnProperty("messageRetentionDuration")) {
                            var error = $root.google.protobuf.Duration.verify(message.messageRetentionDuration);
                            if (error)
                                return "messageRetentionDuration." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Topic message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.pubsub.v1.Topic
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.pubsub.v1.Topic} Topic
                     */
                    Topic.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.pubsub.v1.Topic)
                            return object;
                        var message = new $root.google.pubsub.v1.Topic();
                        if (object.name != null)
                            message.name = String(object.name);
                        if (object.labels) {
                            if (typeof object.labels !== "object")
                                throw TypeError(".google.pubsub.v1.Topic.labels: object expected");
                            message.labels = {};
                            for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                message.labels[keys[i]] = String(object.labels[keys[i]]);
                        }
                        if (object.messageStoragePolicy != null) {
                            if (typeof object.messageStoragePolicy !== "object")
                                throw TypeError(".google.pubsub.v1.Topic.messageStoragePolicy: object expected");
                            message.messageStoragePolicy = $root.google.pubsub.v1.MessageStoragePolicy.fromObject(object.messageStoragePolicy);
                        }
                        if (object.kmsKeyName != null)
                            message.kmsKeyName = String(object.kmsKeyName);
                        if (object.schemaSettings != null) {
                            if (typeof object.schemaSettings !== "object")
                                throw TypeError(".google.pubsub.v1.Topic.schemaSettings: object expected");
                            message.schemaSettings = $root.google.pubsub.v1.SchemaSettings.fromObject(object.schemaSettings);
                        }
                        if (object.satisfiesPzs != null)
                            message.satisfiesPzs = Boolean(object.satisfiesPzs);
                        if (object.messageRetentionDuration != null) {
                            if (typeof object.messageRetentionDuration !== "object")
                                throw TypeError(".google.pubsub.v1.Topic.messageRetentionDuration: object expected");
                            message.messageRetentionDuration = $root.google.protobuf.Duration.fromObject(object.messageRetentionDuration);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Topic message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.pubsub.v1.Topic
                     * @static
                     * @param {google.pubsub.v1.Topic} message Topic
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Topic.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.objects || options.defaults)
                            object.labels = {};
                        if (options.defaults) {
                            object.name = "";
                            object.messageStoragePolicy = null;
                            object.kmsKeyName = "";
                            object.schemaSettings = null;
                            object.satisfiesPzs = false;
                            object.messageRetentionDuration = null;
                        }
                        if (message.name != null && message.hasOwnProperty("name"))
                            object.name = message.name;
                        var keys2;
                        if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                            object.labels = {};
                            for (var j = 0; j < keys2.length; ++j)
                                object.labels[keys2[j]] = message.labels[keys2[j]];
                        }
                        if (message.messageStoragePolicy != null && message.hasOwnProperty("messageStoragePolicy"))
                            object.messageStoragePolicy = $root.google.pubsub.v1.MessageStoragePolicy.toObject(message.messageStoragePolicy, options);
                        if (message.kmsKeyName != null && message.hasOwnProperty("kmsKeyName"))
                            object.kmsKeyName = message.kmsKeyName;
                        if (message.schemaSettings != null && message.hasOwnProperty("schemaSettings"))
                            object.schemaSettings = $root.google.pubsub.v1.SchemaSettings.toObject(message.schemaSettings, options);
                        if (message.satisfiesPzs != null && message.hasOwnProperty("satisfiesPzs"))
                            object.satisfiesPzs = message.satisfiesPzs;
                        if (message.messageRetentionDuration != null && message.hasOwnProperty("messageRetentionDuration"))
                            object.messageRetentionDuration = $root.google.protobuf.Duration.toObject(message.messageRetentionDuration, options);
                        return object;
                    };
    
                    /**
                     * Converts this Topic to JSON.
                     * @function toJSON
                     * @memberof google.pubsub.v1.Topic
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Topic.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Topic
                     * @function getTypeUrl
                     * @memberof google.pubsub.v1.Topic
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Topic.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.pubsub.v1.Topic";
                    };
    
                    return Topic;
                })();
    
                v1.PubsubMessage = (function() {
    
                    /**
                     * Properties of a PubsubMessage.
                     * @memberof google.pubsub.v1
                     * @interface IPubsubMessage
                     * @property {Uint8Array|null} [data] PubsubMessage data
                     * @property {Object.<string,string>|null} [attributes] PubsubMessage attributes
                     * @property {string|null} [messageId] PubsubMessage messageId
                     * @property {google.protobuf.ITimestamp|null} [publishTime] PubsubMessage publishTime
                     * @property {string|null} [orderingKey] PubsubMessage orderingKey
                     */
    
                    /**
                     * Constructs a new PubsubMessage.
                     * @memberof google.pubsub.v1
                     * @classdesc Represents a PubsubMessage.
                     * @implements IPubsubMessage
                     * @constructor
                     * @param {google.pubsub.v1.IPubsubMessage=} [properties] Properties to set
                     */
                    function PubsubMessage(properties) {
                        this.attributes = {};
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * PubsubMessage data.
                     * @member {Uint8Array} data
                     * @memberof google.pubsub.v1.PubsubMessage
                     * @instance
                     */
                    PubsubMessage.prototype.data = $util.newBuffer([]);
    
                    /**
                     * PubsubMessage attributes.
                     * @member {Object.<string,string>} attributes
                     * @memberof google.pubsub.v1.PubsubMessage
                     * @instance
                     */
                    PubsubMessage.prototype.attributes = $util.emptyObject;
    
                    /**
                     * PubsubMessage messageId.
                     * @member {string} messageId
                     * @memberof google.pubsub.v1.PubsubMessage
                     * @instance
                     */
                    PubsubMessage.prototype.messageId = "";
    
                    /**
                     * PubsubMessage publishTime.
                     * @member {google.protobuf.ITimestamp|null|undefined} publishTime
                     * @memberof google.pubsub.v1.PubsubMessage
                     * @instance
                     */
                    PubsubMessage.prototype.publishTime = null;
    
                    /**
                     * PubsubMessage orderingKey.
                     * @member {string} orderingKey
                     * @memberof google.pubsub.v1.PubsubMessage
                     * @instance
                     */
                    PubsubMessage.prototype.orderingKey = "";
    
                    /**
                     * Creates a new PubsubMessage instance using the specified properties.
                     * @function create
                     * @memberof google.pubsub.v1.PubsubMessage
                     * @static
                     * @param {google.pubsub.v1.IPubsubMessage=} [properties] Properties to set
                     * @returns {google.pubsub.v1.PubsubMessage} PubsubMessage instance
                     */
                    PubsubMessage.create = function create(properties) {
                        return new PubsubMessage(properties);
                    };
    
                    /**
                     * Encodes the specified PubsubMessage message. Does not implicitly {@link google.pubsub.v1.PubsubMessage.verify|verify} messages.
                     * @function encode
                     * @memberof google.pubsub.v1.PubsubMessage
                     * @static
                     * @param {google.pubsub.v1.IPubsubMessage} message PubsubMessage message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    PubsubMessage.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.data != null && Object.hasOwnProperty.call(message, "data"))
                            writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.data);
                        if (message.attributes != null && Object.hasOwnProperty.call(message, "attributes"))
                            for (var keys = Object.keys(message.attributes), i = 0; i < keys.length; ++i)
                                writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.attributes[keys[i]]).ldelim();
                        if (message.messageId != null && Object.hasOwnProperty.call(message, "messageId"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.messageId);
                        if (message.publishTime != null && Object.hasOwnProperty.call(message, "publishTime"))
                            $root.google.protobuf.Timestamp.encode(message.publishTime, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        if (message.orderingKey != null && Object.hasOwnProperty.call(message, "orderingKey"))
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderingKey);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified PubsubMessage message, length delimited. Does not implicitly {@link google.pubsub.v1.PubsubMessage.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.pubsub.v1.PubsubMessage
                     * @static
                     * @param {google.pubsub.v1.IPubsubMessage} message PubsubMessage message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    PubsubMessage.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a PubsubMessage message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.pubsub.v1.PubsubMessage
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.pubsub.v1.PubsubMessage} PubsubMessage
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    PubsubMessage.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.pubsub.v1.PubsubMessage(), key, value;
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.data = reader.bytes();
                                    break;
                                }
                            case 2: {
                                    if (message.attributes === $util.emptyObject)
                                        message.attributes = {};
                                    var end2 = reader.uint32() + reader.pos;
                                    key = "";
                                    value = "";
                                    while (reader.pos < end2) {
                                        var tag2 = reader.uint32();
                                        switch (tag2 >>> 3) {
                                        case 1:
                                            key = reader.string();
                                            break;
                                        case 2:
                                            value = reader.string();
                                            break;
                                        default:
                                            reader.skipType(tag2 & 7);
                                            break;
                                        }
                                    }
                                    message.attributes[key] = value;
                                    break;
                                }
                            case 3: {
                                    message.messageId = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.publishTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                }
                            case 5: {
                                    message.orderingKey = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a PubsubMessage message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.pubsub.v1.PubsubMessage
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.pubsub.v1.PubsubMessage} PubsubMessage
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    PubsubMessage.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a PubsubMessage message.
                     * @function verify
                     * @memberof google.pubsub.v1.PubsubMessage
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    PubsubMessage.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.data != null && message.hasOwnProperty("data"))
                            if (!(message.data && typeof message.data.length === "number" || $util.isString(message.data)))
                                return "data: buffer expected";
                        if (message.attributes != null && message.hasOwnProperty("attributes")) {
                            if (!$util.isObject(message.attributes))
                                return "attributes: object expected";
                            var key = Object.keys(message.attributes);
                            for (var i = 0; i < key.length; ++i)
                                if (!$util.isString(message.attributes[key[i]]))
                                    return "attributes: string{k:string} expected";
                        }
                        if (message.messageId != null && message.hasOwnProperty("messageId"))
                            if (!$util.isString(message.messageId))
                                return "messageId: string expected";
                        if (message.publishTime != null && message.hasOwnProperty("publishTime")) {
                            var error = $root.google.protobuf.Timestamp.verify(message.publishTime);
                            if (error)
                                return "publishTime." + error;
                        }
                        if (message.orderingKey != null && message.hasOwnProperty("orderingKey"))
                            if (!$util.isString(message.orderingKey))
                                return "orderingKey: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a PubsubMessage message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.pubsub.v1.PubsubMessage
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.pubsub.v1.PubsubMessage} PubsubMessage
                     */
                    PubsubMessage.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.pubsub.v1.PubsubMessage)
                            return object;
                        var message = new $root.google.pubsub.v1.PubsubMessage();
                        if (object.data != null)
                            if (typeof object.data === "string")
                                $util.base64.decode(object.data, message.data = $util.newBuffer($util.base64.length(object.data)), 0);
                            else if (object.data.length >= 0)
                                message.data = object.data;
                        if (object.attributes) {
                            if (typeof object.attributes !== "object")
                                throw TypeError(".google.pubsub.v1.PubsubMessage.attributes: object expected");
                            message.attributes = {};
                            for (var keys = Object.keys(object.attributes), i = 0; i < keys.length; ++i)
                                message.attributes[keys[i]] = String(object.attributes[keys[i]]);
                        }
                        if (object.messageId != null)
                            message.messageId = String(object.messageId);
                        if (object.publishTime != null) {
                            if (typeof object.publishTime !== "object")
                                throw TypeError(".google.pubsub.v1.PubsubMessage.publishTime: object expected");
                            message.publishTime = $root.google.protobuf.Timestamp.fromObject(object.publishTime);
                        }
                        if (object.orderingKey != null)
                            message.orderingKey = String(object.orderingKey);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a PubsubMessage message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.pubsub.v1.PubsubMessage
                     * @static
                     * @param {google.pubsub.v1.PubsubMessage} message PubsubMessage
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    PubsubMessage.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.objects || options.defaults)
                            object.attributes = {};
                        if (options.defaults) {
                            if (options.bytes === String)
                                object.data = "";
                            else {
                                object.data = [];
                                if (options.bytes !== Array)
                                    object.data = $util.newBuffer(object.data);
                            }
                            object.messageId = "";
                            object.publishTime = null;
                            object.orderingKey = "";
                        }
                        if (message.data != null && message.hasOwnProperty("data"))
                            object.data = options.bytes === String ? $util.base64.encode(message.data, 0, message.data.length) : options.bytes === Array ? Array.prototype.slice.call(message.data) : message.data;
                        var keys2;
                        if (message.attributes && (keys2 = Object.keys(message.attributes)).length) {
                            object.attributes = {};
                            for (var j = 0; j < keys2.length; ++j)
                                object.attributes[keys2[j]] = message.attributes[keys2[j]];
                        }
                        if (message.messageId != null && message.hasOwnProperty("messageId"))
                            object.messageId = message.messageId;
                        if (message.publishTime != null && message.hasOwnProperty("publishTime"))
                            object.publishTime = $root.google.protobuf.Timestamp.toObject(message.publishTime, options);
                        if (message.orderingKey != null && message.hasOwnProperty("orderingKey"))
                            object.orderingKey = message.orderingKey;
                        return object;
                    };
    
                    /**
                     * Converts this PubsubMessage to JSON.
                     * @function toJSON
                     * @memberof google.pubsub.v1.PubsubMessage
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    PubsubMessage.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for PubsubMessage
                     * @function getTypeUrl
                     * @memberof google.pubsub.v1.PubsubMessage
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    PubsubMessage.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.pubsub.v1.PubsubMessage";
                    };
    
                    return PubsubMessage;
                })();
    
                v1.GetTopicRequest = (function() {
    
                    /**
                     * Properties of a GetTopicRequest.
                     * @memberof google.pubsub.v1
                     * @interface IGetTopicRequest
                     * @property {string|null} [topic] GetTopicRequest topic
                     */
    
                    /**
                     * Constructs a new GetTopicRequest.
                     * @memberof google.pubsub.v1
                     * @classdesc Represents a GetTopicRequest.
                     * @implements IGetTopicRequest
                     * @constructor
                     * @param {google.pubsub.v1.IGetTopicRequest=} [properties] Properties to set
                     */
                    function GetTopicRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * GetTopicRequest topic.
                     * @member {string} topic
                     * @memberof google.pubsub.v1.GetTopicRequest
                     * @instance
                     */
                    GetTopicRequest.prototype.topic = "";
    
                    /**
                     * Creates a new GetTopicRequest instance using the specified properties.
                     * @function create
                     * @memberof google.pubsub.v1.GetTopicRequest
                     * @static
                     * @param {google.pubsub.v1.IGetTopicRequest=} [properties] Properties to set
                     * @returns {google.pubsub.v1.GetTopicRequest} GetTopicRequest instance
                     */
                    GetTopicRequest.create = function create(properties) {
                        return new GetTopicRequest(properties);
                    };
    
                    /**
                     * Encodes the specified GetTopicRequest message. Does not implicitly {@link google.pubsub.v1.GetTopicRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.pubsub.v1.GetTopicRequest
                     * @static
                     * @param {google.pubsub.v1.IGetTopicRequest} message GetTopicRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetTopicRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.topic != null && Object.hasOwnProperty.call(message, "topic"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.topic);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified GetTopicRequest message, length delimited. Does not implicitly {@link google.pubsub.v1.GetTopicRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.pubsub.v1.GetTopicRequest
                     * @static
                     * @param {google.pubsub.v1.IGetTopicRequest} message GetTopicRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetTopicRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a GetTopicRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.pubsub.v1.GetTopicRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.pubsub.v1.GetTopicRequest} GetTopicRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetTopicRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.pubsub.v1.GetTopicRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.topic = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a GetTopicRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.pubsub.v1.GetTopicRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.pubsub.v1.GetTopicRequest} GetTopicRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetTopicRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a GetTopicRequest message.
                     * @function verify
                     * @memberof google.pubsub.v1.GetTopicRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    GetTopicRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.topic != null && message.hasOwnProperty("topic"))
                            if (!$util.isString(message.topic))
                                return "topic: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a GetTopicRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.pubsub.v1.GetTopicRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.pubsub.v1.GetTopicRequest} GetTopicRequest
                     */
                    GetTopicRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.pubsub.v1.GetTopicRequest)
                            return object;
                        var message = new $root.google.pubsub.v1.GetTopicRequest();
                        if (object.topic != null)
                            message.topic = String(object.topic);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a GetTopicRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.pubsub.v1.GetTopicRequest
                     * @static
                     * @param {google.pubsub.v1.GetTopicRequest} message GetTopicRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    GetTopicRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.topic = "";
                        if (message.topic != null && message.hasOwnProperty("topic"))
                            object.topic = message.topic;
                        return object;
                    };
    
                    /**
                     * Converts this GetTopicRequest to JSON.
                     * @function toJSON
                     * @memberof google.pubsub.v1.GetTopicRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    GetTopicRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for GetTopicRequest
                     * @function getTypeUrl
                     * @memberof google.pubsub.v1.GetTopicRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    GetTopicRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.pubsub.v1.GetTopicRequest";
                    };
    
                    return GetTopicRequest;
                })();
    
                v1.UpdateTopicRequest = (function() {
    
                    /**
                     * Properties of an UpdateTopicRequest.
                     * @memberof google.pubsub.v1
                     * @interface IUpdateTopicRequest
                     * @property {google.pubsub.v1.ITopic|null} [topic] UpdateTopicRequest topic
                     * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateTopicRequest updateMask
                     */
    
                    /**
                     * Constructs a new UpdateTopicRequest.
                     * @memberof google.pubsub.v1
                     * @classdesc Represents an UpdateTopicRequest.
                     * @implements IUpdateTopicRequest
                     * @constructor
                     * @param {google.pubsub.v1.IUpdateTopicRequest=} [properties] Properties to set
                     */
                    function UpdateTopicRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * UpdateTopicRequest topic.
                     * @member {google.pubsub.v1.ITopic|null|undefined} topic
                     * @memberof google.pubsub.v1.UpdateTopicRequest
                     * @instance
                     */
                    UpdateTopicRequest.prototype.topic = null;
    
                    /**
                     * UpdateTopicRequest updateMask.
                     * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                     * @memberof google.pubsub.v1.UpdateTopicRequest
                     * @instance
                     */
                    UpdateTopicRequest.prototype.updateMask = null;
    
                    /**
                     * Creates a new UpdateTopicRequest instance using the specified properties.
                     * @function create
                     * @memberof google.pubsub.v1.UpdateTopicRequest
                     * @static
                     * @param {google.pubsub.v1.IUpdateTopicRequest=} [properties] Properties to set
                     * @returns {google.pubsub.v1.UpdateTopicRequest} UpdateTopicRequest instance
                     */
                    UpdateTopicRequest.create = function create(properties) {
                        return new UpdateTopicRequest(properties);
                    };
    
                    /**
                     * Encodes the specified UpdateTopicRequest message. Does not implicitly {@link google.pubsub.v1.UpdateTopicRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.pubsub.v1.UpdateTopicRequest
                     * @static
                     * @param {google.pubsub.v1.IUpdateTopicRequest} message UpdateTopicRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    UpdateTopicRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.topic != null && Object.hasOwnProperty.call(message, "topic"))
                            $root.google.pubsub.v1.Topic.encode(message.topic, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                            $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified UpdateTopicRequest message, length delimited. Does not implicitly {@link google.pubsub.v1.UpdateTopicRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.pubsub.v1.UpdateTopicRequest
                     * @static
                     * @param {google.pubsub.v1.IUpdateTopicRequest} message UpdateTopicRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    UpdateTopicRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an UpdateTopicRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.pubsub.v1.UpdateTopicRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.pubsub.v1.UpdateTopicRequest} UpdateTopicRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    UpdateTopicRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.pubsub.v1.UpdateTopicRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.topic = $root.google.pubsub.v1.Topic.decode(reader, reader.uint32());
                                    break;
                                }
                            case 2: {
                                    message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an UpdateTopicRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.pubsub.v1.UpdateTopicRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.pubsub.v1.UpdateTopicRequest} UpdateTopicRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    UpdateTopicRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an UpdateTopicRequest message.
                     * @function verify
                     * @memberof google.pubsub.v1.UpdateTopicRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    UpdateTopicRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.topic != null && message.hasOwnProperty("topic")) {
                            var error = $root.google.pubsub.v1.Topic.verify(message.topic);
                            if (error)
                                return "topic." + error;
                        }
                        if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                            var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                            if (error)
                                return "updateMask." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates an UpdateTopicRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.pubsub.v1.UpdateTopicRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.pubsub.v1.UpdateTopicRequest} UpdateTopicRequest
                     */
                    UpdateTopicRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.pubsub.v1.UpdateTopicRequest)
                            return object;
                        var message = new $root.google.pubsub.v1.UpdateTopicRequest();
                        if (object.topic != null) {
                            if (typeof object.topic !== "object")
                                throw TypeError(".google.pubsub.v1.UpdateTopicRequest.topic: object expected");
                            message.topic = $root.google.pubsub.v1.Topic.fromObject(object.topic);
                        }
                        if (object.updateMask != null) {
                            if (typeof object.updateMask !== "object")
                                throw TypeError(".google.pubsub.v1.UpdateTopicRequest.updateMask: object expected");
                            message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an UpdateTopicRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.pubsub.v1.UpdateTopicRequest
                     * @static
                     * @param {google.pubsub.v1.UpdateTopicRequest} message UpdateTopicRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    UpdateTopicRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.topic = null;
                            object.updateMask = null;
                        }
                        if (message.topic != null && message.hasOwnProperty("topic"))
                            object.topic = $root.google.pubsub.v1.Topic.toObject(message.topic, options);
                        if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                            object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                        return object;
                    };
    
                    /**
                     * Converts this UpdateTopicRequest to JSON.
                     * @function toJSON
                     * @memberof google.pubsub.v1.UpdateTopicRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    UpdateTopicRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for UpdateTopicRequest
                     * @function getTypeUrl
                     * @memberof google.pubsub.v1.UpdateTopicRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    UpdateTopicRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.pubsub.v1.UpdateTopicRequest";
                    };
    
                    return UpdateTopicRequest;
                })();
    
                v1.PublishRequest = (function() {
    
                    /**
                     * Properties of a PublishRequest.
                     * @memberof google.pubsub.v1
                     * @interface IPublishRequest
                     * @property {string|null} [topic] PublishRequest topic
                     * @property {Array.<google.pubsub.v1.IPubsubMessage>|null} [messages] PublishRequest messages
                     */
    
                    /**
                     * Constructs a new PublishRequest.
                     * @memberof google.pubsub.v1
                     * @classdesc Represents a PublishRequest.
                     * @implements IPublishRequest
                     * @constructor
                     * @param {google.pubsub.v1.IPublishRequest=} [properties] Properties to set
                     */
                    function PublishRequest(properties) {
                        this.messages = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * PublishRequest topic.
                     * @member {string} topic
                     * @memberof google.pubsub.v1.PublishRequest
                     * @instance
                     */
                    PublishRequest.prototype.topic = "";
    
                    /**
                     * PublishRequest messages.
                     * @member {Array.<google.pubsub.v1.IPubsubMessage>} messages
                     * @memberof google.pubsub.v1.PublishRequest
                     * @instance
                     */
                    PublishRequest.prototype.messages = $util.emptyArray;
    
                    /**
                     * Creates a new PublishRequest instance using the specified properties.
                     * @function create
                     * @memberof google.pubsub.v1.PublishRequest
                     * @static
                     * @param {google.pubsub.v1.IPublishRequest=} [properties] Properties to set
                     * @returns {google.pubsub.v1.PublishRequest} PublishRequest instance
                     */
                    PublishRequest.create = function create(properties) {
                        return new PublishRequest(properties);
                    };
    
                    /**
                     * Encodes the specified PublishRequest message. Does not implicitly {@link google.pubsub.v1.PublishRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.pubsub.v1.PublishRequest
                     * @static
                     * @param {google.pubsub.v1.IPublishRequest} message PublishRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    PublishRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.topic != null && Object.hasOwnProperty.call(message, "topic"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.topic);
                        if (message.messages != null && message.messages.length)
                            for (var i = 0; i < message.messages.length; ++i)
                                $root.google.pubsub.v1.PubsubMessage.encode(message.messages[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified PublishRequest message, length delimited. Does not implicitly {@link google.pubsub.v1.PublishRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.pubsub.v1.PublishRequest
                     * @static
                     * @param {google.pubsub.v1.IPublishRequest} message PublishRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    PublishRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a PublishRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.pubsub.v1.PublishRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.pubsub.v1.PublishRequest} PublishRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    PublishRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.pubsub.v1.PublishRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.topic = reader.string();
                                    break;
                                }
                            case 2: {
                                    if (!(message.messages && message.messages.length))
                                        message.messages = [];
                                    message.messages.push($root.google.pubsub.v1.PubsubMessage.decode(reader, reader.uint32()));
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a PublishRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.pubsub.v1.PublishRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.pubsub.v1.PublishRequest} PublishRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    PublishRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a PublishRequest message.
                     * @function verify
                     * @memberof google.pubsub.v1.PublishRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    PublishRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.topic != null && message.hasOwnProperty("topic"))
                            if (!$util.isString(message.topic))
                                return "topic: string expected";
                        if (message.messages != null && message.hasOwnProperty("messages")) {
                            if (!Array.isArray(message.messages))
                                return "messages: array expected";
                            for (var i = 0; i < message.messages.length; ++i) {
                                var error = $root.google.pubsub.v1.PubsubMessage.verify(message.messages[i]);
                                if (error)
                                    return "messages." + error;
                            }
                        }
                        return null;
                    };
    
                    /**
                     * Creates a PublishRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.pubsub.v1.PublishRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.pubsub.v1.PublishRequest} PublishRequest
                     */
                    PublishRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.pubsub.v1.PublishRequest)
                            return object;
                        var message = new $root.google.pubsub.v1.PublishRequest();
                        if (object.topic != null)
                            message.topic = String(object.topic);
                        if (object.messages) {
                            if (!Array.isArray(object.messages))
                                throw TypeError(".google.pubsub.v1.PublishRequest.messages: array expected");
                            message.messages = [];
                            for (var i = 0; i < object.messages.length; ++i) {
                                if (typeof object.messages[i] !== "object")
                                    throw TypeError(".google.pubsub.v1.PublishRequest.messages: object expected");
                                message.messages[i] = $root.google.pubsub.v1.PubsubMessage.fromObject(object.messages[i]);
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a PublishRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.pubsub.v1.PublishRequest
                     * @static
                     * @param {google.pubsub.v1.PublishRequest} message PublishRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    PublishRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.messages = [];
                        if (options.defaults)
                            object.topic = "";
                        if (message.topic != null && message.hasOwnProperty("topic"))
                            object.topic = message.topic;
                        if (message.messages && message.messages.length) {
                            object.messages = [];
                            for (var j = 0; j < message.messages.length; ++j)
                                object.messages[j] = $root.google.pubsub.v1.PubsubMessage.toObject(message.messages[j], options);
                        }
                        return object;
                    };
    
                    /**
                     * Converts this PublishRequest to JSON.
                     * @function toJSON
                     * @memberof google.pubsub.v1.PublishRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    PublishRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for PublishRequest
                     * @function getTypeUrl
                     * @memberof google.pubsub.v1.PublishRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    PublishRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.pubsub.v1.PublishRequest";
                    };
    
                    return PublishRequest;
                })();
    
                v1.PublishResponse = (function() {
    
                    /**
                     * Properties of a PublishResponse.
                     * @memberof google.pubsub.v1
                     * @interface IPublishResponse
                     * @property {Array.<string>|null} [messageIds] PublishResponse messageIds
                     */
    
                    /**
                     * Constructs a new PublishResponse.
                     * @memberof google.pubsub.v1
                     * @classdesc Represents a PublishResponse.
                     * @implements IPublishResponse
                     * @constructor
                     * @param {google.pubsub.v1.IPublishResponse=} [properties] Properties to set
                     */
                    function PublishResponse(properties) {
                        this.messageIds = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * PublishResponse messageIds.
                     * @member {Array.<string>} messageIds
                     * @memberof google.pubsub.v1.PublishResponse
                     * @instance
                     */
                    PublishResponse.prototype.messageIds = $util.emptyArray;
    
                    /**
                     * Creates a new PublishResponse instance using the specified properties.
                     * @function create
                     * @memberof google.pubsub.v1.PublishResponse
                     * @static
                     * @param {google.pubsub.v1.IPublishResponse=} [properties] Properties to set
                     * @returns {google.pubsub.v1.PublishResponse} PublishResponse instance
                     */
                    PublishResponse.create = function create(properties) {
                        return new PublishResponse(properties);
                    };
    
                    /**
                     * Encodes the specified PublishResponse message. Does not implicitly {@link google.pubsub.v1.PublishResponse.verify|verify} messages.
                     * @function encode
                     * @memberof google.pubsub.v1.PublishResponse
                     * @static
                     * @param {google.pubsub.v1.IPublishResponse} message PublishResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    PublishResponse.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.messageIds != null && message.messageIds.length)
                            for (var i = 0; i < message.messageIds.length; ++i)
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.messageIds[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified PublishResponse message, length delimited. Does not implicitly {@link google.pubsub.v1.PublishResponse.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.pubsub.v1.PublishResponse
                     * @static
                     * @param {google.pubsub.v1.IPublishResponse} message PublishResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    PublishResponse.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a PublishResponse message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.pubsub.v1.PublishResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.pubsub.v1.PublishResponse} PublishResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    PublishResponse.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.pubsub.v1.PublishResponse();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.messageIds && message.messageIds.length))
                                        message.messageIds = [];
                                    message.messageIds.push(reader.string());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a PublishResponse message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.pubsub.v1.PublishResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.pubsub.v1.PublishResponse} PublishResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    PublishResponse.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a PublishResponse message.
                     * @function verify
                     * @memberof google.pubsub.v1.PublishResponse
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    PublishResponse.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.messageIds != null && message.hasOwnProperty("messageIds")) {
                            if (!Array.isArray(message.messageIds))
                                return "messageIds: array expected";
                            for (var i = 0; i < message.messageIds.length; ++i)
                                if (!$util.isString(message.messageIds[i]))
                                    return "messageIds: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a PublishResponse message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.pubsub.v1.PublishResponse
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.pubsub.v1.PublishResponse} PublishResponse
                     */
                    PublishResponse.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.pubsub.v1.PublishResponse)
                            return object;
                        var message = new $root.google.pubsub.v1.PublishResponse();
                        if (object.messageIds) {
                            if (!Array.isArray(object.messageIds))
                                throw TypeError(".google.pubsub.v1.PublishResponse.messageIds: array expected");
                            message.messageIds = [];
                            for (var i = 0; i < object.messageIds.length; ++i)
                                message.messageIds[i] = String(object.messageIds[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a PublishResponse message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.pubsub.v1.PublishResponse
                     * @static
                     * @param {google.pubsub.v1.PublishResponse} message PublishResponse
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    PublishResponse.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.messageIds = [];
                        if (message.messageIds && message.messageIds.length) {
                            object.messageIds = [];
                            for (var j = 0; j < message.messageIds.length; ++j)
                                object.messageIds[j] = message.messageIds[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this PublishResponse to JSON.
                     * @function toJSON
                     * @memberof google.pubsub.v1.PublishResponse
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    PublishResponse.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for PublishResponse
                     * @function getTypeUrl
                     * @memberof google.pubsub.v1.PublishResponse
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    PublishResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.pubsub.v1.PublishResponse";
                    };
    
                    return PublishResponse;
                })();
    
                v1.ListTopicsRequest = (function() {
    
                    /**
                     * Properties of a ListTopicsRequest.
                     * @memberof google.pubsub.v1
                     * @interface IListTopicsRequest
                     * @property {string|null} [project] ListTopicsRequest project
                     * @property {number|null} [pageSize] ListTopicsRequest pageSize
                     * @property {string|null} [pageToken] ListTopicsRequest pageToken
                     */
    
                    /**
                     * Constructs a new ListTopicsRequest.
                     * @memberof google.pubsub.v1
                     * @classdesc Represents a ListTopicsRequest.
                     * @implements IListTopicsRequest
                     * @constructor
                     * @param {google.pubsub.v1.IListTopicsRequest=} [properties] Properties to set
                     */
                    function ListTopicsRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ListTopicsRequest project.
                     * @member {string} project
                     * @memberof google.pubsub.v1.ListTopicsRequest
                     * @instance
                     */
                    ListTopicsRequest.prototype.project = "";
    
                    /**
                     * ListTopicsRequest pageSize.
                     * @member {number} pageSize
                     * @memberof google.pubsub.v1.ListTopicsRequest
                     * @instance
                     */
                    ListTopicsRequest.prototype.pageSize = 0;
    
                    /**
                     * ListTopicsRequest pageToken.
                     * @member {string} pageToken
                     * @memberof google.pubsub.v1.ListTopicsRequest
                     * @instance
                     */
                    ListTopicsRequest.prototype.pageToken = "";
    
                    /**
                     * Creates a new ListTopicsRequest instance using the specified properties.
                     * @function create
                     * @memberof google.pubsub.v1.ListTopicsRequest
                     * @static
                     * @param {google.pubsub.v1.IListTopicsRequest=} [properties] Properties to set
                     * @returns {google.pubsub.v1.ListTopicsRequest} ListTopicsRequest instance
                     */
                    ListTopicsRequest.create = function create(properties) {
                        return new ListTopicsRequest(properties);
                    };
    
                    /**
                     * Encodes the specified ListTopicsRequest message. Does not implicitly {@link google.pubsub.v1.ListTopicsRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.pubsub.v1.ListTopicsRequest
                     * @static
                     * @param {google.pubsub.v1.IListTopicsRequest} message ListTopicsRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListTopicsRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.project);
                        if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                        if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ListTopicsRequest message, length delimited. Does not implicitly {@link google.pubsub.v1.ListTopicsRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.pubsub.v1.ListTopicsRequest
                     * @static
                     * @param {google.pubsub.v1.IListTopicsRequest} message ListTopicsRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListTopicsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ListTopicsRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.pubsub.v1.ListTopicsRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.pubsub.v1.ListTopicsRequest} ListTopicsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListTopicsRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.pubsub.v1.ListTopicsRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.project = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.pageSize = reader.int32();
                                    break;
                                }
                            case 3: {
                                    message.pageToken = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ListTopicsRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.pubsub.v1.ListTopicsRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.pubsub.v1.ListTopicsRequest} ListTopicsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListTopicsRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ListTopicsRequest message.
                     * @function verify
                     * @memberof google.pubsub.v1.ListTopicsRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ListTopicsRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.project != null && message.hasOwnProperty("project"))
                            if (!$util.isString(message.project))
                                return "project: string expected";
                        if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                            if (!$util.isInteger(message.pageSize))
                                return "pageSize: integer expected";
                        if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                            if (!$util.isString(message.pageToken))
                                return "pageToken: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a ListTopicsRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.pubsub.v1.ListTopicsRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.pubsub.v1.ListTopicsRequest} ListTopicsRequest
                     */
                    ListTopicsRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.pubsub.v1.ListTopicsRequest)
                            return object;
                        var message = new $root.google.pubsub.v1.ListTopicsRequest();
                        if (object.project != null)
                            message.project = String(object.project);
                        if (object.pageSize != null)
                            message.pageSize = object.pageSize | 0;
                        if (object.pageToken != null)
                            message.pageToken = String(object.pageToken);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ListTopicsRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.pubsub.v1.ListTopicsRequest
                     * @static
                     * @param {google.pubsub.v1.ListTopicsRequest} message ListTopicsRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ListTopicsRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.project = "";
                            object.pageSize = 0;
                            object.pageToken = "";
                        }
                        if (message.project != null && message.hasOwnProperty("project"))
                            object.project = message.project;
                        if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                            object.pageSize = message.pageSize;
                        if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                            object.pageToken = message.pageToken;
                        return object;
                    };
    
                    /**
                     * Converts this ListTopicsRequest to JSON.
                     * @function toJSON
                     * @memberof google.pubsub.v1.ListTopicsRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ListTopicsRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ListTopicsRequest
                     * @function getTypeUrl
                     * @memberof google.pubsub.v1.ListTopicsRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ListTopicsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.pubsub.v1.ListTopicsRequest";
                    };
    
                    return ListTopicsRequest;
                })();
    
                v1.ListTopicsResponse = (function() {
    
                    /**
                     * Properties of a ListTopicsResponse.
                     * @memberof google.pubsub.v1
                     * @interface IListTopicsResponse
                     * @property {Array.<google.pubsub.v1.ITopic>|null} [topics] ListTopicsResponse topics
                     * @property {string|null} [nextPageToken] ListTopicsResponse nextPageToken
                     */
    
                    /**
                     * Constructs a new ListTopicsResponse.
                     * @memberof google.pubsub.v1
                     * @classdesc Represents a ListTopicsResponse.
                     * @implements IListTopicsResponse
                     * @constructor
                     * @param {google.pubsub.v1.IListTopicsResponse=} [properties] Properties to set
                     */
                    function ListTopicsResponse(properties) {
                        this.topics = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ListTopicsResponse topics.
                     * @member {Array.<google.pubsub.v1.ITopic>} topics
                     * @memberof google.pubsub.v1.ListTopicsResponse
                     * @instance
                     */
                    ListTopicsResponse.prototype.topics = $util.emptyArray;
    
                    /**
                     * ListTopicsResponse nextPageToken.
                     * @member {string} nextPageToken
                     * @memberof google.pubsub.v1.ListTopicsResponse
                     * @instance
                     */
                    ListTopicsResponse.prototype.nextPageToken = "";
    
                    /**
                     * Creates a new ListTopicsResponse instance using the specified properties.
                     * @function create
                     * @memberof google.pubsub.v1.ListTopicsResponse
                     * @static
                     * @param {google.pubsub.v1.IListTopicsResponse=} [properties] Properties to set
                     * @returns {google.pubsub.v1.ListTopicsResponse} ListTopicsResponse instance
                     */
                    ListTopicsResponse.create = function create(properties) {
                        return new ListTopicsResponse(properties);
                    };
    
                    /**
                     * Encodes the specified ListTopicsResponse message. Does not implicitly {@link google.pubsub.v1.ListTopicsResponse.verify|verify} messages.
                     * @function encode
                     * @memberof google.pubsub.v1.ListTopicsResponse
                     * @static
                     * @param {google.pubsub.v1.IListTopicsResponse} message ListTopicsResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListTopicsResponse.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.topics != null && message.topics.length)
                            for (var i = 0; i < message.topics.length; ++i)
                                $root.google.pubsub.v1.Topic.encode(message.topics[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ListTopicsResponse message, length delimited. Does not implicitly {@link google.pubsub.v1.ListTopicsResponse.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.pubsub.v1.ListTopicsResponse
                     * @static
                     * @param {google.pubsub.v1.IListTopicsResponse} message ListTopicsResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListTopicsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ListTopicsResponse message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.pubsub.v1.ListTopicsResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.pubsub.v1.ListTopicsResponse} ListTopicsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListTopicsResponse.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.pubsub.v1.ListTopicsResponse();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.topics && message.topics.length))
                                        message.topics = [];
                                    message.topics.push($root.google.pubsub.v1.Topic.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 2: {
                                    message.nextPageToken = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ListTopicsResponse message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.pubsub.v1.ListTopicsResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.pubsub.v1.ListTopicsResponse} ListTopicsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListTopicsResponse.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ListTopicsResponse message.
                     * @function verify
                     * @memberof google.pubsub.v1.ListTopicsResponse
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ListTopicsResponse.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.topics != null && message.hasOwnProperty("topics")) {
                            if (!Array.isArray(message.topics))
                                return "topics: array expected";
                            for (var i = 0; i < message.topics.length; ++i) {
                                var error = $root.google.pubsub.v1.Topic.verify(message.topics[i]);
                                if (error)
                                    return "topics." + error;
                            }
                        }
                        if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                            if (!$util.isString(message.nextPageToken))
                                return "nextPageToken: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a ListTopicsResponse message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.pubsub.v1.ListTopicsResponse
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.pubsub.v1.ListTopicsResponse} ListTopicsResponse
                     */
                    ListTopicsResponse.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.pubsub.v1.ListTopicsResponse)
                            return object;
                        var message = new $root.google.pubsub.v1.ListTopicsResponse();
                        if (object.topics) {
                            if (!Array.isArray(object.topics))
                                throw TypeError(".google.pubsub.v1.ListTopicsResponse.topics: array expected");
                            message.topics = [];
                            for (var i = 0; i < object.topics.length; ++i) {
                                if (typeof object.topics[i] !== "object")
                                    throw TypeError(".google.pubsub.v1.ListTopicsResponse.topics: object expected");
                                message.topics[i] = $root.google.pubsub.v1.Topic.fromObject(object.topics[i]);
                            }
                        }
                        if (object.nextPageToken != null)
                            message.nextPageToken = String(object.nextPageToken);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ListTopicsResponse message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.pubsub.v1.ListTopicsResponse
                     * @static
                     * @param {google.pubsub.v1.ListTopicsResponse} message ListTopicsResponse
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ListTopicsResponse.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.topics = [];
                        if (options.defaults)
                            object.nextPageToken = "";
                        if (message.topics && message.topics.length) {
                            object.topics = [];
                            for (var j = 0; j < message.topics.length; ++j)
                                object.topics[j] = $root.google.pubsub.v1.Topic.toObject(message.topics[j], options);
                        }
                        if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                            object.nextPageToken = message.nextPageToken;
                        return object;
                    };
    
                    /**
                     * Converts this ListTopicsResponse to JSON.
                     * @function toJSON
                     * @memberof google.pubsub.v1.ListTopicsResponse
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ListTopicsResponse.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ListTopicsResponse
                     * @function getTypeUrl
                     * @memberof google.pubsub.v1.ListTopicsResponse
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ListTopicsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.pubsub.v1.ListTopicsResponse";
                    };
    
                    return ListTopicsResponse;
                })();
    
                v1.ListTopicSubscriptionsRequest = (function() {
    
                    /**
                     * Properties of a ListTopicSubscriptionsRequest.
                     * @memberof google.pubsub.v1
                     * @interface IListTopicSubscriptionsRequest
                     * @property {string|null} [topic] ListTopicSubscriptionsRequest topic
                     * @property {number|null} [pageSize] ListTopicSubscriptionsRequest pageSize
                     * @property {string|null} [pageToken] ListTopicSubscriptionsRequest pageToken
                     */
    
                    /**
                     * Constructs a new ListTopicSubscriptionsRequest.
                     * @memberof google.pubsub.v1
                     * @classdesc Represents a ListTopicSubscriptionsRequest.
                     * @implements IListTopicSubscriptionsRequest
                     * @constructor
                     * @param {google.pubsub.v1.IListTopicSubscriptionsRequest=} [properties] Properties to set
                     */
                    function ListTopicSubscriptionsRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ListTopicSubscriptionsRequest topic.
                     * @member {string} topic
                     * @memberof google.pubsub.v1.ListTopicSubscriptionsRequest
                     * @instance
                     */
                    ListTopicSubscriptionsRequest.prototype.topic = "";
    
                    /**
                     * ListTopicSubscriptionsRequest pageSize.
                     * @member {number} pageSize
                     * @memberof google.pubsub.v1.ListTopicSubscriptionsRequest
                     * @instance
                     */
                    ListTopicSubscriptionsRequest.prototype.pageSize = 0;
    
                    /**
                     * ListTopicSubscriptionsRequest pageToken.
                     * @member {string} pageToken
                     * @memberof google.pubsub.v1.ListTopicSubscriptionsRequest
                     * @instance
                     */
                    ListTopicSubscriptionsRequest.prototype.pageToken = "";
    
                    /**
                     * Creates a new ListTopicSubscriptionsRequest instance using the specified properties.
                     * @function create
                     * @memberof google.pubsub.v1.ListTopicSubscriptionsRequest
                     * @static
                     * @param {google.pubsub.v1.IListTopicSubscriptionsRequest=} [properties] Properties to set
                     * @returns {google.pubsub.v1.ListTopicSubscriptionsRequest} ListTopicSubscriptionsRequest instance
                     */
                    ListTopicSubscriptionsRequest.create = function create(properties) {
                        return new ListTopicSubscriptionsRequest(properties);
                    };
    
                    /**
                     * Encodes the specified ListTopicSubscriptionsRequest message. Does not implicitly {@link google.pubsub.v1.ListTopicSubscriptionsRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.pubsub.v1.ListTopicSubscriptionsRequest
                     * @static
                     * @param {google.pubsub.v1.IListTopicSubscriptionsRequest} message ListTopicSubscriptionsRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListTopicSubscriptionsRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.topic != null && Object.hasOwnProperty.call(message, "topic"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.topic);
                        if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                        if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ListTopicSubscriptionsRequest message, length delimited. Does not implicitly {@link google.pubsub.v1.ListTopicSubscriptionsRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.pubsub.v1.ListTopicSubscriptionsRequest
                     * @static
                     * @param {google.pubsub.v1.IListTopicSubscriptionsRequest} message ListTopicSubscriptionsRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ListTopicSubscriptionsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ListTopicSubscriptionsRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.pubsub.v1.ListTopicSubscriptionsRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.pubsub.v1.ListTopicSubscriptionsRequest} ListTopicSubscriptionsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListTopicSubscriptionsRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.pubsub.v1.ListTopicSubscriptionsRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.topic = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.pageSize = reader.int32();
                                    break;
                                }
                            case 3: {
                                    message.pageToken = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ListTopicSubscriptionsRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.pubsub.v1.ListTopicSubscriptionsRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.pubsub.v1.ListTopicSubscriptionsRequest} ListTopicSubscriptionsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ListTopicSubscriptionsRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ListTopicSubscriptionsRequest message.
                     * @function verify
                     * @memberof google.pubsub.v1.ListTopicSubscriptionsRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ListTopicSubscriptionsRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.topic != null && message.hasOwnProperty("topic"))
                            if (!$util.isString(message.topic))
                                return "topic: string expected";
                        if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                            if (!$util.isInteger(message.pageSize))
                                return "pageSize: integer expected";
                        if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                            if (!$util.isString(message.pageToken))
                                return "pageToken: string expected";
                        return null;
                    };
    
                    /**
                     * Creates a ListTopicSubscriptionsRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.pubsub.v1.ListTopicSubscriptionsRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.pubsub.v1.ListTopicSubscriptionsRequest} ListTopicSubscriptionsRequest
                     */
                    ListTopicSubscriptionsRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.pubsub.v1.ListTopicSubscriptionsRequest)
                            return object;
                        var message = new $root.google.pubsub.v1.ListTopicSubscriptionsRequest();
                        if (object.topic != null)
                            message.topic = String(object.topic);
                        if (object.pageSize != null)
                            message.pageSize = object.pageSize | 0;
                        if (object.pageToken != null)
                            message.pageToken = String(object.pageToken);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ListTopicSubscriptionsRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.pubsub.v1.ListTopicSubscriptionsRequest
                     * @static
                     * @param {google.pubsub.v1.ListTopicSubscriptionsRequest} message ListTopicSubscriptionsRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ListTopicSubscriptionsRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.topic = "";
                            object.pageSize = 0;
                            object.pageToken = "";
                        }
                        if (message.topic != null && message.hasOwnProperty("topic"))
                            object.topic = message.topic;
                        if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                            object.pageSize = message.pageSize;
                        if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                            object.pageToken = message.pageToken;
                        return object;
                    };
    
                    /**
                     * Converts this ListTopicSubscriptionsRequest to JSON.
                     * @function toJSON
                     * @memberof google.pubsub.v1.ListTopicSubscriptionsRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ListTopicSubscriptionsRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ListTopicSubscriptionsRequest
                     * @function getTypeUrl
                     * @memberof google.pubsub.v1.ListTopicSubscriptionsRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ListTopicSubscriptionsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.pubsub.v1.ListTopicSubscriptionsRequest";
                    };
    
                    return ListTopicSubscriptionsRequest;
                })();
    
                v1.ListTopicSubscriptionsResponse = (function() {
    
                    /**
                     * Properties of a ListTopicSubscriptionsResponse.
                     * @memberof google.pubsub.v1
                     * @interface IListTopicSubscriptionsResponse
                     * @property {Array.<string>|null} [subscriptions] ListTopicSubscriptionsResponse subscriptions
                     * @property {string|null} [nextPageToken] ListTopicSubscriptionsResponse nextPageToken
                     */
    
                    /**
                     * Constructs a new ListTopicSubscriptionsResponse.
                     * @memberof google.pubsub.v1
                     * @classdesc Represents a ListTopicSubscriptionsResponse.
                     * @implements IListTopicSubscriptionsResponse
                     * @constructor
                     * @param {google.pubsub.v1.IListTopicSubscriptionsResponse=} [properties] Properties to set
                     */
                    function ListTopicSubscriptionsResponse(properties) {
                        this.subscriptions = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ListTopicSubscriptionsResponse subscriptions.
                     * @member {Array.<string>} subscriptions
                     * @